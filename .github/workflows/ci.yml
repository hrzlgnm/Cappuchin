name: Continuous Integration

on:
    push:
        branches:
            - master

    pull_request:
        branches:
            - master

jobs:
    lint:
        runs-on: ubuntu-22.04

        steps:
            - uses: actions/checkout@v3

            - uses: actions/setup-python@v4
              with: { python-version: '3.8' }

            - name: Install codespell
              run: pip3 install codespell

            - name: Lint
              run: cmake -D FORMAT_COMMAND=clang-format-14 -P cmake/lint.cmake

            - name: Spell check
              if: always()
              run: cmake -P cmake/spell.cmake
    sanitize:
        needs: [lint]

        runs-on: ubuntu-22.04

        env: { CXX: clang++-14 }

        steps:
            - uses: actions/checkout@v3

            - name: Install Deps
              run: sudo apt-get update -q
                  && sudo apt-get install ninja-build libgtest-dev libfmt-dev -q -y

            - name: Configure
              run: cmake --preset=ci-sanitize -GNinja

            - name: Build
              run: cmake --build build/sanitize -j 2

            - name: Test
              working-directory: build/sanitize
              env:
                  ASAN_OPTIONS: "strict_string_checks=1:\
                      detect_stack_use_after_return=1:\
                      check_initialization_order=1:\
                      strict_init_order=1:\
                      detect_leaks=1"
                  UBSAN_OPTIONS: print_stacktrace=1
              run: ctest --output-on-failure --no-tests=error -j 2

    test:
        needs: [lint]

        strategy:
            matrix:
                os: [ubuntu-22.04]

        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v3

            - name: Install static analyzers and dependencies
              if: matrix.os == 'ubuntu-22.04'
              run: >-
                  sudo apt-get update -q
                  sudo apt-get install clang-tidy-14 cppcheck ninja-build libgtest-dev libfmt-dev -y -q

                  sudo update-alternatives --install
                  /usr/bin/clang-tidy clang-tidy
                  /usr/bin/clang-tidy-14 140

            - name: Configure
              shell: pwsh
              run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])" -GNinja

            - name: Build
              run: cmake --build build --config Release -j 2

            - name: Test
              working-directory: build/test
              run: ctest --output-on-failure --no-tests=error -j 2
